# Generated by Django 2.2.11 on 2020-08-12 20:36

import dillo.models.mixins
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dillo', '0029_post_job'),
    ]

    operations = [
        migrations.CreateModel(
            name='PostRig',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dillo.Post')),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(help_text='The name of the character', max_length=255)),
                ('description', models.TextField(null=True)),
                ('url', models.URLField(help_text='Where to get the rig (Gumroad, Dropbox, etc.)', max_length=550)),
                ('notes', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, height_field='image_height', help_text='A 16:9 preview of the rig', upload_to=dillo.models.mixins.get_upload_to_hashed_path, width_field='image_width')),
                ('image_height', models.PositiveIntegerField(null=True)),
                ('image_width', models.PositiveIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('dillo.post',),
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.AlterModelOptions(
            name='postjob',
            options={'verbose_name': 'job', 'verbose_name_plural': 'jobs'},
        ),
        migrations.DeleteModel(
            name='Job',
        ),
        migrations.AddField(
            model_name='postrig',
            name='software',
            field=models.ManyToManyField(blank=True, help_text='Software compatibility', related_name='software', to='dillo.Software'),
        ),
    ]
