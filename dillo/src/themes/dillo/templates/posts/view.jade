| {% extends 'layout.html' %}
| {% from 'posts/_macros.html' import category_dropdown, print_comment with context %}

| {% block og %}
meta(property="og:type", content="article")
meta(property="og:title", content="{{post.title}} - {{ config.SETTINGS_TITLE | safe}}")
meta(property="og:url",
		 content="{{url_for('posts.view', category=post.category.url, uuid=post.uuid, slug=post.slug)}}")

| {% if post.picture %}
meta(property="og:image", content="{{post.thumbnail('h')}}")
| {% else %}
meta(property="og:image",
		 content="{{ url_for('static', filename='images/favicon_192x192.png') }}")
| {% endif %}

meta(property="article:title", content="{{post.title}}")


| {% if post.user.first_name and post.user.first_name != 'None' %}
meta(property="article:author",
		 content="{{post.user.first_name}} {{post.user.last_name}}")
| {% else %}
meta(property="article:author",
		 content="{{post.user.username}}")
| {% endif %}

meta(property="article:published_time",
		 content="{{post.creation_date}}")

| {% endblock %}

| {% block page_title %}{{post.title}} -{% endblock %}

| {% block header %}
link(href="https://cdnjs.cloudflare.com/ajax/libs/jquery.swipebox/1.3.0.2/css/swipebox.min.css",rel="stylesheet")
| {% endblock %}

| {% block body %}
| {% cache 60*5, 'post', post.uuid, user_string_id %}

.row
	.col-md-9.post-view

		| {# Header #}
		.row


			| {# Breadcrumbs #}
			.col-md-6.col-xs-6
				h4.post-view-container-title

					a(href="{{url_for('index')}}") Home
					strong Â·
					a(href="{{url_for('posts.index_category', category=post.category.url)}}")
						| {{post.category.name}}


			| {# Categories #}
			.col-md-6.col-xs-6.
				{{ category_dropdown(title, category, categories) }}


		| {# Post View #}
		.post-view-container

			| {# Post Rating #}
			div(title="{{post.rating.positive}} Upvotes, {{post.rating.negative}} Downvotes",
					class="post-view-rate{% if current_user.is_anonymous() %} popover-post-vote{% endif %}",
					data-toggle="popover",
					data-trigger="hover",
					data-placement="bottom",
					data-content="{% if current_user.is_anonymous() %}Sign in to vote{% endif %}")

				a(class="up{% if post.user_rating and post.user_rating.is_positive %} rated{% endif %}",
					href="{{url_for('posts.rate', uuid=post.uuid, rating='1')}}",
					title="Upvote, click again to undo")
					i.fa.fa-angle-up

				span.middle.rating {{post.rating_delta}}

				a(title="Downvote, click again to undo",
					href="{{url_for('posts.rate', uuid=post.uuid, rating='0')}}",
					class="down{% if post.user_rating and not post.user_rating.is_positive %} rated{% endif %}")
					i.fa.fa-angle-down

			| {# Post Title #}
			#post-view-title.post-view-title
				a(title="{{post.title}}",
					href="{% if post.post_type.url == 'link' %}{{post.content}}{% else %}{{url_for('posts.view', category=post.category.url, uuid=post.uuid, slug=post.slug)}}{% endif %}",
					target="{% if post.post_type.url == 'link' %}_blank{% endif %}")
					| {{post.title}}

			#post-edit-title.post-view-title
				textarea(type="text", rows=1, value="{{post.title}}") {{post.title}}

			.clearfix


			| {# Notifications #}
			| {% if current_user.is_owner or current_user.has_role('admin') %}
			.notification-post-edit
				i.fa.fa-edit
				|  You're in edit mode!

			.notification-post-saved
				i.fa.fa-floppy-o
				|  Saving...

			.notification-post-fail
				i.fa.fa-frown-o.fa-spin
				|  Failed... try again?

			| {% endif %}


			| {# Posts type Text #}
			| {% if post.post_type.url == 'link' %}
			| {% if not oembed %}
			#post-content.post-view-content.link.
				<img src="http://www.google.com/s2/favicons?domain={{post.content}}"/>
				<a href="{{post.content}}" target="_blank" id="link-url">{{post.content}}</a>
			| {% endif %}

			| {% else %}
			#post-content.post-view-content(class="{{post.post_type.url}}")
				| {{post.content|safe}}

			| {% endif %}


			| {# Posts with OEmbed or Picture #}

			| {# Posts Details #}
			.post-view-details

				| {% if oembed %}
				#post-content.post-view-content.oembed.
					{{oembed['html']|safe}}

				| {% if post.picture %}
				div.post-view-details-underlay
				img.hidden(src="{{post.thumbnail('m')}}", data-adaptive-background)
				| {% endif %}

				| {% endif %}

				| {% if not oembed and post.picture %}
				.post-view-details-underlay
				.post-view-content-image
					a.swipebox(title="{{post.title}}",
						href="{{post.original_image}}",
						target="_blank")
						img.post-view-content-image-src(src="{{post.thumbnail('h')}}", alt="{{post.title}}", data-adaptive-background)
						.post-view-content-image-link view on imgur.com

				| {% endif %}

				.row.post-view-details-container
					.col-md-1.col-sm-1.col-xs-2

						.post-view-details-avatar

							| {% if post.user.deleted %}
							span.post-view-details-avatar-deleted
							| {% else %}

							a(title="{{post.user.first_name}} {{post.user.last_name}}",
								href="{{url_for('index')}}u/{{post.user.id}}")

								img(title="{{post.user.first_name}} {{post.user.last_name}}",
										src="{{post.user.gravatar()}}")

								| {# User Badges #}

								| {% if post.user.has_role('dev_core') %}
								div.post-view-details-avatar-label
									i.dev_core.bf-blender(title="Blender Core Developer")

								| {% elif post.user.has_role('bfct_trainer') %}
								div.post-view-details-avatar-label
									i.bfct_trainer.fa.fa-graduation-cap(
										title="Blender Foundation Certified Trainer")

								| {% elif post.user.has_role('network_member') %}
								div.post-view-details-avatar-label
									i.network_member.bf-network(
										title="Blender Network Member")

								| {% elif post.user.has_role('cloud_member') %}
								div.post-view-details-avatar-label
									i.cloud_member.bf-cloud(
										title="Blender Cloud Member")

								| {% endif %}
							| {% endif %}

					.col-md-11.col-sm-11.col-xs-10

						.post-view-details-meta

							.post-actions

								h4#edit-post-delete-label(
									class="{% if post.status != 'deleted' %}hidden{% endif %}")
									span.label.label-lg.label-danger This post has been deleted

								| {% if post.status != 'deleted' %}
								span#social
									span.icons

										a.pop(
											title="Share via Email",
											href="mailto:?subject={{post.title}}&body={{post.title}} on {{ config.SETTINGS_TITLE | safe}} | {{url_for('posts.view', category=post.category.url, uuid=post.uuid, slug=post.slug, _external=True)}}",
											target="_blank")
											i.fa.fa-envelope-o


										a.pop(
											title="Share on Reddit",
											href="http://www.reddit.com/submit?url={{url_for('posts.view', category=post.category.url, uuid=post.uuid, slug=post.slug, _external=True)}}",
											target="_blank")
											i.fa.fa-reddit


										a.pop(
											title="Share on Google+",
											href="https://plus.google.com/share?url={{url_for('posts.view', category=post.category.url, uuid=post.uuid, slug=post.slug, _external=True)}}" ,
											target="_blank")
											i.fa.fa-google-plus


										a.pop(
											title="Share on Facebook",
											href="https://www.facebook.com/sharer/sharer.php?u={{post.title}}%20{{url_for('posts.view', category=post.category.url, uuid=post.uuid, slug=post.slug, _external=True)}}",
											target="_blank")
											i.fa.fa-facebook


										| {# XXX - User Setting for Social Networks #}
										a.pop(
											title="Share on Twitter",
											href="https://twitter.com/home?status={{post.title}} @{{ config.SETTINGS_TWITTER_USERNAME }} {{url_for('posts.view', category=post.category.url, uuid=post.uuid, slug=post.slug, _external=True)}} %23b3d" ,
											target="_blank")
											i.fa.fa-twitter

								span#social-toggle.post-actions-button.social(title="Share")
									i.fa.fa-share-alt

								| {% endif %}


								| {% if current_user.is_owner or current_user.has_role('admin') %}
								| {% if post.status != 'deleted' %}

								a#edit-post-save.post-actions-button.save(
									title="Save Changes",
									href="{{ url_for('posts.edit', uuid=post.uuid) }}")
									i.fa.fa-save

								span#edit-post-toggle.post-actions-button.edit(title="Edit Post")
									i.fa.fa-pencil

								a.edit-post-delete-widget.post-actions-button.delete(
									title="Delete Post",
									href="")

									span.edit-post-delete-widget-action(link="")
									span.edit-post-delete-widget-icon
										i.fa.fa-trash
									span.edit-post-delete-widget-question ?

								| {% endif %}
								| {% endif %}


							| {# Author Name & Karma #}
							span.author-name

								| {% if post.user.deleted %}
								span.deleted(title="This account no longer exists") [deleted]

								| {% else %}

								a(href="{{url_for('index')}}u/{{post.user.id}}").
									{% if (post.user.first_name and post.user.first_name != 'None') %}
										{{post.user.first_name}} {{post.user.last_name}}
									{% else %}
										{{post.user.username}}
									{% endif %}

								span.author-karma(title="Reputation score") {{post.user.karma.value}}

								| {% endif %}


							| {# Author Roles #}

							| {% if not post.user.deleted %}
							span.author-roles.
								{% if post.user.has_role('dev_core') %}
									Blender Core Developer<br/>
								{% endif %}
								{% if post.user.has_role('cloud_member') %}
									Blender Cloud Member<br/>
								{% endif %}
								{% if post.user.has_role('network_member') %}
									Blender Network Member<br/>
								{% endif %}
								{% if post.user.has_role('bfct_trainer') %}
									Blender Foundation Certified Trainer
								{% endif %}

							| {% endif %}


							| {# Post Meta #}

							span.meta

								span.date
									a(title="Permalink",
										href="{{url_for('posts.view', category=post.category.url, uuid=post.uuid)}}")
										| posted

										span(title="{{post.creation_date.strftime('%H:%M on %A %d, %B %Y')}}").
											{{post.pretty_creation_date}}

										| {% if post.edit_date %}
										span.edited(title="Last edited {{post.edit_date.strftime('%H:%M on %A %d, %B %Y')}}").
											(edited {{post.pretty_edit_date}})

										| {% endif %}


								span.separator


								a.type(href="{% if post.post_type.url == 'link' %}{{post.content}}{% else %}{{url_for('posts.view', category=post.category.url, uuid=post.uuid, slug=post.slug)}}{% endif %}").
									{{post.post_type}}


								span.separator


								a(href="{{url_for('index')}}p/{{post.category.url}}").
									{{post.category.name}}


								| {% if post.status == 'deleted' %}
								span.disabled (deleted)
								| {% endif %}


								span.separator


								a(title="Permalink",
									href="{{url_for('posts.view', category=post.category.url, uuid=post.uuid)}}")
									i.fa.fa-link


								| {% if post.status != 'deleted' %}
								span.separator

								a(title="Flag this post, click again to undo",
									href="{{url_for('posts.flag', uuid=post.uuid)}}",
									class="flag{% if post.user_rating and post.user_rating.is_flagged %} flagged{% endif %}")

								| {% endif %}


			| {# Posts Comments #}
			.post-view-comments

				| {# Submit Comment #}
				| {% if post.status != 'deleted' %}
				.post-view-comments-submit

					| {% if current_user.is_anonymous() %}
					h3
						a(href="{{url_for_security('login')}}") Login to comment
					| {% endif %}

					| {% if current_user.is_authenticated() %}
					.post-view-comments-avatar
						a(href="{{url_for('index')}}u/{{current_user.id}}")
							img(title="{{current_user.first_name}} {{current_user.last_name}}",
									src="{{current_user.gravatar()}}",
									class="{% if post.user.id == current_user.id %} op{% endif %}")

							| {# User Badges #}

							| {% if current_user.has_role('dev_core') %}
							div.post-view-comments-avatar-label
								i.dev_core.bf-blender(title="Blender Core Developer")

							| {% elif current_user.has_role('bfct_trainer') %}
							div.post-view-comments-avatar-label
								i.bfct_trainer.fa.fa-graduation-cap(
									title="Blender Foundation Certified Trainer")

							| {% elif current_user.has_role('network_member') %}
							div.post-view-comments-avatar-label
								i.network_member.bf-network(
									title="Blender Network Member")

							| {% elif current_user.has_role('cloud_member') %}
							div.post-view-comments-avatar-label
								i.cloud_member.bf-cloud(
									title="Blender Cloud Member")
							| {% endif %}

					| {% endif %}


					.post-view-comments-item-content
						| {% if not current_user.is_anonymous() %}
						form#form-comment(
							role="form",
							method="POST",
							enctype="multipart/form-data",
							action="{{url_for('comments.submit', post_id=post.id)}}")

							| {{ form.hidden_tag() }}

							.comment-form-container.form-group
								| {{ form.content(class='form-control comment-reply-field', id='post_comment', placeholder="Leave a comment...") }}
								| {% if form.content.errors %}
								ul.error
									| {% for error in form.content.errors %}
									li {{ error }}
									| {% endfor %}
								| {% endif %}

								| {{ form.parent_id }}

								.comment-form-buttons
									button#submit-comment.btn.btn-default.submit(
										type="submit")
										i.fa.fa-paper-plane.icon-send
										| Send
										span.hotkey
											| (Ctrl+Enter)

									a#cancel-comment.cancel
										| cancel

									a.md(
										target="_blank",
										href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet")
										| Markdown Cheatsheet

							.comment-reply-preview


						| {% endif %}

					| {% endif %}


				a(name="comments")

				| {% if post.comments %}
				h3.comments-title
					| Comments
					small ({{post.comments_count}})

				| {% for comment in post.comments_first_level %}
				| 	{{print_comment(comment, loop, post)}}
				| 	{% for reply in comment.children %}
				| 		{{print_comment(reply, loop, post, is_reply=True)}}
				| 	{% endfor %}
				| {% endfor %}

				| {% else %}

				h3.comments-title.
					No Comments {% if post.status != 'deleted' %}<small>(yet)</small>{% endif %}

				| {% if post.status != 'deleted' %}

				.post-view-comments-empty.
					It's your chance. Be the first!

				| {% endif %} <br/>

				| {% endif %}


	.col-md-3
		| {% include '_sidebar.html' %}


| {% endcache %}
| {% endblock %}

| {% block footer_scripts %}
script(type="text/javascript").

	/* Convert markdown on comments  */
	$(".post-view-comments-item-text, #post-content.text:first").each(function(i) {
		var text = $(this).text().trim();
		$(this).html(convert(text));
	});

	{% if current_user.is_authenticated() %}

		/* Build the markdown preview when typing in textarea */
		$(function() {
			var $textarea = $('.comment-reply-field:first, .comment-edit-field:first'),
					$container = $('.comment-form-container:first'),
					$preview = $('.comment-reply-preview:first');

			// As we type in the textarea
			$textarea.keyup(function() {

				// Convert markdown
				$preview.html(convert($textarea.val()));

				// While we are at it, style when empty
				if ($textarea.val()) {
					$container.addClass('filled');
					$preview.show();
				} else {
					$container.removeClass('filled');
					$preview.hide();
				};

				// Send on ctrl+enter
				if ((event.keyCode == 10 || event.keyCode == 13) && event.ctrlKey){
					$("#form-comment").submit();
				};

				// Grow as we type
				field = document.getElementById('post_comment');
				field.style.height = (field.scrollHeight) + "px";

			}).trigger('keyup');
		});

		function cancelComment(){
			$('.post-view-comments-submit').removeAttr('parent_id').removeClass('is_reply');
			$('.post-view-comments-submit').detach().insertBefore('.post-view-comments');
			$('#post_comment').blur();
			$('#post_comment').val('');
			$('#post_comment').css('height', 'auto');
			$('.comment-reply-preview').html('').hide();
			$('.comment-form-container').removeClass('filled');
		};


		$("#cancel-comment").click(function(e) {
			e.preventDefault();
			cancelComment();
		});


		// Click on reply
		$(".post-comment-reply").click(function(e) {
			e.preventDefault();

			var comment = $(this).attr('comment');
			var closest = $(this).closest('.post-view-comments-item');

			$('.post-view-comments-submit').attr('parent_id', comment).addClass('is_reply');
			$('.post-view-comments-submit').detach().insertAfter(closest);
			$('#post_comment').focus();
		});


		/* Comments */
		var print_comment = function(comment, reply) {
		if (typeof(reply)==='undefined') reply = '';

		comment =
		'<div class="post-view-comments-item '+ reply +'flash"> \
			<div class="post-view-comments-avatar">\
				<img src="' + comment['gravatar'] + '" class="op">\
			</div>\
			<div class="post-view-comments-item-header">\
				<span class="author">' + comment['user_name'] + '</span>\
				Â· \
				<span title="23:06 on 14 February, 2016">\
				' + comment['creation_date'] + '\
				</span>\
			</div>\
			<div id="' + comment['comment_id'] + '" class="post-view-comments-item-content">\
				<div class="post-view-comments-item-text">\
					' + convert(comment['content']) + '\
				</div>\
			</div>\
		</div>';
		return comment;
		}

		$("#form-comment").on("submit", function(e) {
			e.preventDefault();

			var form_comment = $(this);
			var comments_submit = $(".post-view-comments-submit");
			var is_reply = comments_submit.hasClass('is_reply');
			var comment_data;

			if (is_reply) {
				var parent_id = $(".post-view-comments-submit").attr("parent_id");
				comment_data = {
					parent_id: $(".post-view-comments-submit").attr("parent_id"),
					content: $("#post_comment").val()
				};

			} else {
				comment_data = $(form_comment).serialize();
			};

			/* UI */
			$('#submit-comment').html('<i class="fa fa-spinner fa-spin"></i> Sending');
			$('.comment-form-buttons .send').addClass('sending');

			$.post($(form_comment).attr('action'), comment_data, function(data){
				$(".post-view-comments-empty").hide();

				if (is_reply) {
					c = print_comment(data['comment'], 'reply ');
					$(comments_submit).before(c);
				} else {
					c = print_comment(data['comment']);
					$('.comments-title').after(c);
				};

				// Increase counter of comments
				$('.comments-title small').text(
					$('.comments-title small').text().replace( /(\d+)/, function(){return arguments[1]*1+1} )
				);

			})
			.done(function(data){
				$('#submit-comment').html('<i class="fa fa-paper-plane icon-send"></i> Send');
				$('.comment-form-buttons .send').removeClass('sending');

				cancelComment();
			})
			.fail(function(data){
				$('#submit-comment').html('<i class="fa fa-frown-o fa-spin"></i> Houston!');
				$('.comment-form-buttons .send').removeClass('sending');
				$('.comment-form-buttons .send').addClass('fail');
			});
		});

		{% if current_user.is_owner or current_user.has_role('admin') %}

			var post_type = '{{post.post_type.url}}';

			{# EDIT POST #}
			$("#edit-post-toggle").click(function() {

				if (post_type == 'link'){
					$('.notification-post-edit').text('Click on the Title to edit');
				} else {
					$('.notification-post-edit').text('Click on the Title or Content to edit');
				};

				$('[class^="notification-post"]').hide();
				$('.notification-post-edit').show();
				$('.notification-post-edit').animate({'top' : '0', 'opacity' : 1});

				$('#post-view-title').hide();
				$('#post-edit-title').show();

				$(this).fadeOut(50, function(){
					$("#edit-post-save").css('display', 'inline-block');
					$("#edit-post-save").animate({'opacity' : 1});
				});
			});

			{# SAVE POST #}
			$("#edit-post-save").click(function(e) {
				e.preventDefault();

				$('#post-edit-title').hide();
				$('#post-view-title').show();

				$('#post-view-title a').html($("#post-edit-title textarea").val());

				$(this).fadeOut(50, function(){
					$("#edit-post-toggle").css('display', 'inline-block');
					$("#edit-post-toggle").animate({'opacity' : 1});
				});

				var tosubmit = {};

				if ('{{post.post_type.url}}' == 'link'){
					tosubmit = {
						title : $("#post-edit-title textarea").val()
					};
				} else {
					tosubmit = {
						title : $("#post-edit-title textarea").val(),
						content : $("#post-content").html()
					};
				};

				$.post($(this).attr("href"), tosubmit,
					function(data){
				})
					.done(function() {
						$('[class^="notification-post"]').hide();
						$('.notification-post-saved').show();
						$('.notification-post-saved').animate({'top' : '0', 'opacity' : 1});
					})
					.fail(function() {
						$('[class^="notification-post"]').hide();
						$('.notification-post-fail').show();
						$('.notification-post-fail').animate({'top' : '0', 'opacity' : 1});
					})
					.always(function() {
						$('.notification-post-saved').html('<i class="fa fa-check"></i> Saved!');
						$('.notification-post-saved').delay(2000).animate({'top' : '-25px', 'opacity' : 0})
					});
			});

			$('.edit-post-delete-widget').click(function(e){
				e.preventDefault();
				$('.edit-post-delete-widget-question').animate({'opacity': 1.0, 'left' : 6}, 350);
				$('.edit-post-delete-widget-icon').animate({'left' : -5}, 250, function(){
				$('.edit-post-delete-widget-action').attr('link', '{{ url_for("posts.delete", uuid=post.uuid) }}');
				});
			});

			$('.edit-post-delete-widget-action').click(function(e){
				$.post($('.edit-post-delete-widget-action').attr("link"), function(data){
					$('.edit-post-delete-widget').fadeOut(function(){
						$('#edit-post-delete-label').toggleClass('hidden');
					});
					$('#edit-post-toggle').fadeOut();
					$('#social').fadeOut();
					$('#social-toggle').fadeOut();
				});
			});

		{% endif %} {# endif is_owner #}

		{# EDIT COMMENT #}
		$(".edit-comment-toggle").click(function(e) {
			e.preventDefault();

			$(this).hide();
			$(this).next(".edit-comment-save").show();

			$('.notification-post-edit').text("Click on the comment's text to edit");
			$('[class^="notification-post"]').hide();
			$('.notification-post-edit').show();
			$('.notification-post-edit').animate({'top' : '0', 'opacity' : 1});

			var comment_id = $(this).data('comment-id');
			var comment_text = $('#comment-text-id-' + comment_id + ' .post-view-comments-item-text');

			$(comment_text).replaceWith(
				'<textarea class="form-control comment-edit-field" id="comment-edit-field">' +
				$(comment_text).html() +
				'</textarea>'
			);

			editField = document.getElementById('comment-edit-field');
			if (editField.clientHeight < editField.scrollHeight) {
				$('.comment-edit-field').css('height', editField.scrollHeight + 'px');
			};
		});

		{# SAVE COMMENT #}
		$(".edit-comment-save").click(function(e) {
			e.preventDefault();

			save_button = $(this);

			var comment_id = $(this).data('comment-id');
			var comment_container = '#' + 'comment-text-id-' + comment_id;
			var comment_data = $(comment_container + ' textarea').val();

			$(comment_container).attr('contenteditable', false);

			var params = {
				content : comment_data
			};

			$.post($(this).attr("href"), params,
				function(data){
			})
			.done(function() {
				save_button.hide();
				save_button.prev(".edit-comment-toggle").show();

				$('[class^="notification-post"]').hide();
				$('.notification-post-saved').show();
				$('.notification-post-saved').animate({'top' : '0', 'opacity' : 1});

				$(comment_container).html('<div class="post-view-comments-item-text">' + convert(comment_data) + '</div>');
			})
			.fail(function() {
				$('[class^="notification-post"]').hide();
				$('.notification-post-fail').show();
				$('.notification-post-fail').animate({'top' : '0', 'opacity' : 1});
			})
			.always(function() {
				$('.notification-post-saved').html('<i class="fa fa-check"></i> Saved!');
				$('.notification-post-saved').delay(2000).animate({'top' : '-25px', 'opacity' : 0})
			});
		});

		{# DELETE COMMENT #}
		$(".edit-comment-delete-fake").click(function(e) {
			e.preventDefault();
			$(this).hide();
			$(this).next().show();
		});


		$(".edit-comment-delete").click(function(e) {
			e.preventDefault();

			$.get($(this).attr('href'));
			$(this).closest('.post-view-comments-item').addClass('hidden');
			$('[data-parent-id="' + $(this).data('comment-id') + '"]').addClass('hidden');

			// Decrease counter of comments
			$('.comments-title small').text(
				$('.comments-title small').text().replace( /(\d+)/, function(){return arguments[1]*1-1} )
			);
		});

		/* Voting */
		var upvote = function(up, down, rate) {
			$.get(up.attr("href"), function(data){
				down.removeClass('rated');
				if (data['rating'] === "True") {
					up.addClass('rated');
				} else {
					up.removeClass('rated');
				}
				rate.text(data['rating_delta']);
			});
		}

		var downvote = function(up, down, rate) {
			$.get(down.attr("href"), function(data){
				up.removeClass('rated');
				if (data['rating'] === "False") {
					$(".down").addClass('rated');
				} else {
					$(".down").removeClass('rated');
				}
				rate.text(data['rating_delta']);
			});
		}

		$(".up").click(function(e) {
			e.preventDefault();
			var up = $(this);
			var rate = $(this).siblings('.rating');
			var down = $(this).siblings('.down');
			upvote(up, down, rate);
		});

		$(".down").click(function(e) {
			e.preventDefault();
			var up = $(this).siblings('.up');
			var rate = $(this).siblings('.rating');
			var down = $(this);
			downvote(up, down, rate);
		});

		$(".flag").click(function(e) {
			e.preventDefault();
			$(this).toggleClass('flagged');
			$.get($(this).attr('href'));
		});

	{% else %}

		$('.popover-post-vote').popover();
		$('.popover-comment-reply').popover();
		$('.popover-comment-vote').popover();

	{% endif %} {# endif is_authenticated #}

script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery.swipebox/1.3.0.2/js/jquery.swipebox.min.js")

script.
	var abdefaults  = {
		selector: '[data-adaptive-background]',
		parent:   '.post-view-details',
		exclude:  [
			'rgb(0,0,0)', 'rgb(1,1,1)','rgb(2,2,2)','rgb(3,3,3)','rgb(4,4,4)',
			'rgb(252,252,252)','rgb(253,253,253)','rgb(254,254,254)','rgb(255,255,255)'],
	};
	$.adaptiveBackground.run(abdefaults);

	// Scale up the images if they *almost* fill the space
	var post_image = $('img.post-view-content-image-src');
	if (post_image.width() >= 512){ post_image.css('width', '100%'); };

	$( '.swipebox' ).swipebox();

	var link = $('#link-url');
	var pretty = link.text().replace(/.*?:\/\//g, "").replace(/^www./, "").replace(/\/$/, "");
	$(link).text(pretty);
	$(link).css('visibility', 'visible');

| {% endblock %}
