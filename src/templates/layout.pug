doctype html
html(lang='en')
	head
		meta(charset='utf-8')
		title
			| {% if not project %}
			| {% set project = main_project %}
			| {% endif %}
			| {% if self.page_title() %}{% block page_title %}{% endblock %}{% endif %}
			| {{ project.name }}
			| {% if not is_main_project %} â€” {{ main_project.name }}{% endif %}

		| {% block head %}{% endblock head %}
		link(href='//fonts.googleapis.com/css?family=Oxygen|Open+Sans:400,600', rel='stylesheet', type='text/css')
		link(href="{{ url_for('static_pillar', filename='assets/css/font-pillar.css') }}", rel='stylesheet')
		| {% if is_main_project %}
		link(rel='alternate', title="Atom", type="application/atom+xml" href="{{ url_for('posts.feed_all_communities') }}")
		| {% else %}
		link(rel='alternate', title="Atom", type="application/atom+xml" href="{{ url_for('posts.feed_community', community_url=project.url) }}")
		| {% endif %}

		| {% if project.extension_props.dillo %}
		style(type="text/css").
			{% if project.extension_props.dillo.community_theme_color %}
			:root {
				--community-theme-color: {{ project.extension_props.dillo.community_theme_color }};
			}
			{% endif %}

			{% if project.extension_props.dillo.community_theme_css %}
				{{ project.extension_props.dillo.community_theme_css }}
			{% endif %}
		| {% endif %}

		| {% block style %}{% endblock style %}

		script(src="{{ url_for('static_dillo', filename='js/vendor/js-cookie-2.1.4.min.js') }}")

		| {% block stylesheets %}
		link(rel='stylesheet', title="dark", type="text/css", href="{{ url_for('static_dillo', filename='css/main_dark.css') }}")
		link(disabled, rel='alternate stylesheet', title="light", type="text/css", href="{{ url_for('static_dillo', filename='css/main.css') }}")
		| {% endblock stylesheets %}

		| {# Theme loading: swap CSS on load, check crucial_ui.js for the swapping logic #}
		script.
			if (Cookies.get('theme') == 'light'){
				document.getElementsByTagName("link").item(4).disabled = false;
				document.getElementsByTagName("link").item(3).disabled = true;
			};


		| {% block favicon %}
		| {% if not is_main_project and project.picture_square %}
		| {# TODO: Use custom image for favicon #}
		link(rel="icon", type="image/png", href="{{ project.picture_square.thumbnail('l') }}")
		| {% else %}
		link(rel="icon", type="image/png", href="{{ url_for('static_dillo', filename='images/favicon.png') }}")
		| {% endif %}
		| {% endblock favicon %}

		meta(name='viewport', content='width=device-width, initial-scale=1.0')

		| {% if config['GOOGLE_SITE_VERIFICATION'] %}
		meta(name="google-site-verification" content="{{ config['GOOGLE_SITE_VERIFICATION'] }}")
		| {% endif %}

		| {# Meta info for Open Graph and Twitter Cards #}
		meta(property="og:site_name", content="{{ project.name }}")
		meta(name="twitter:card" content="summary_large_image")
		meta(name="twitter:site" content="@{{ config.SETTINGS_TWITTER_USERNAME }}")
		| {% block og %}
		meta(name="twitter:creator" content="@{{ config.SETTINGS_TWITTER_USERNAME }}")
		meta(name="twitter:title" content="{{ project.name }}")
		meta(name="twitter:description" content="{{ project.summary }}")
		meta(property="og:description", content="{{ project.summary }}")
		| {% if project.picture_header %}
		meta(name="twitter:image" content="{{ project.picture_header.thumbnail('h') }}")
		meta(property="og:image", content="{{ project.picture_header.thumbnail('h') }}")
		| {% endif %}
		| {% endblock og %}

	body({% block bodyattrs %}{%endblock%})
		#app-container
			#app-nav
				| {% from 'dillo/macros/_communities.html' import communities_list_sidebar %}
				| {{ communities_list_sidebar(main_project, communities, project) }}
			#app-content
				#app-header
					#app-loader.loading-bar

					| {% block header %}
					| {% if project.picture_header %}
					.d-header-background(
						style="background-image: url({{ project.picture_header.thumbnail('h') }});")
					| {% endif %}
					.d-header
						.d-communities
							.flyout.communities
								.flyout-hat
								.flyout-content
									.flyout-title
										a.title(href="{{ url_for('posts.index_all') }} ") {{ _('All Communities') }}

									| {% from 'dillo/macros/_communities.html' import communities_list %}
								| {{ communities_list(communities) }}

						| {% if is_main_project %}
						a.d-header-title.pl-3.pt-3(href="{{ url_for('posts.index_all') }}")
							| {{ project.name }}
						| {% else %}
						a.d-header-title.pl-3.pt-3(href="{{ url_for('posts.index', community_url=project.url) }}")
							| {{ project.name }}
						| {% endif %}

						.d-header-action.refine
							nav.nav-bar
								ul.list-unstyled.d-flex.align-items-center.m-0
									li.d-flex
										#list-refined-values
										#list-tags.wgt-dropdown-toggle
										//- Add POST_ADDITIONAL_PROPERTIES filters here
										| {% for k, v in config['POST_ADDITIONAL_PROPERTIES'].items() %}
										| {% if project.url in v['projects'] %}
										.wgt-dropdown-toggle(id="list-{{ k }}")
										| {% endif %}
										| {% endfor %}
									li
										.wgt-search
											.wgt-search-icon
												i.pi-search
											input(
												id="q",
												type="text",
												placeholder="{{ _('Search...') }}")

						.d-header-toggle-nav
							i.pi-menu

						.d-header-action
							nav.nav-bar
								ul.list-unstyled.d-flex.align-items-center.m-0
									| {% if current_user.is_authenticated %}
									| {% block submit_btn %} {% endblock %}

									li.nav-notifications
										a#notifications-toggle.nav-item.rounded-circle(
											title="{{ _('Notifications') }}",
											data-toggle="tooltip",
											data-placement="bottom")
											i.pi-notifications-none.nav-notifications-icon
											span#notifications-count
												span
											.flyout-hat

										#notifications.flyout.notifications
											.flyout-content
												span.flyout-title {{ _('Notifications') }}
												a#notifications-markallread(
													title="{{ _('Mark All as Read') }}",
													href="/notifications/read-all")
													| {{ _('Mark All as Read') }}

												| {% include '_notifications.html' %}

									li.dropdown.wgt-dropdown-toggle
										.nav-item.dropdown-toggle
											img.avatar.rounded-circle(
												src="{{ current_user.gravatar }}",
												alt="{{ _('Avatar') }}")

											.dropdown-toggle-icon
												i.pi-angle-down

										ul.dropdown-menu.dropdown-menu-right
											li
												a.theme-toggle(
													title="{{ _('Toggle between dark and light themes') }}")
													i.pi-moon
													| {{ _('Toggle Theme') }}
											li
												a(
													href="{{ url_for('users.users_view', username=current_user.username) }}"
													title="{{ _('Profile') }}")
													i.pi-vcard
													| {{ _('My Profile') }}
											li
												a(
													href="{{ url_for('settings.profile') }}"
													title="{{ _('Settings') }}")
													i.pi-cog
													| {{ _('Settings') }}
											| {% if current_user.has_cap('admin') %}
											li
												a(
													href="{{ url_for('projects.edit', project_url=project.url) }}"
													title="{{ _('Community Settings') }}")
													i.pi-whoosh
													| {{ _('Community Settings') }}
											| {% endif %}
											li
												a(
													href="{{ url_for('users.logout') }}")
													i.pi-off(title="{{ _('Log out') }}")
													| {{ _('Log out') }}

									| {% else %}
									li
										a.nav-item.theme-toggle(
											title="{{ _('Turn off the lights') }}")
											i.pi-moon
									li
										.btn-group.submit
											a.btn.btn-submit(
												href="{{ url_for('users.login') }}",
												title="{{ _('Submit a Link [Shift+A]')}}")
												i.pi-link
												span {{ _('Submit Link') }}

											span.btn.btn-submit.wgt-dropdown-toggle
												i.pi-angle-down

												ul.dropdown-menu.right
													li
														a.btn.btn-submit.post(
															href="{{ url_for('users.login') }}",
															title="{{ _('Write a Post') }}")
															i.pi-document-text
															|  {{ _('Write a Post') }}

									li
										a.nav-item.login(href="{{ url_for('users.login') }}")
											| {{ _('Log in') }}
									| {% endif %}
					| {% endblock header %}

				#app-main
					| {% block body %}{% endblock body %}

		#app-overlay
			.overlay-background
			.dialog-box
				| {% if project.extension_props.dillo %}
				.dialog-placeholder
					i.pi-spin.spin
				| {% endif %}

		#notification-pop(data-url="", data-read-toggle="")
			.nc-progress
			a#pop-close(href="#", title="Dismiss")
				i.pi-cancel
			.nc-item
				.nc-text
					| {{ _('No Notifications') }}


		script(src="{{ url_for('static_pillar', filename='assets/js/vendor/jquery-3.1.0.min.js')}}")
		script(src="{{ url_for('static_pillar', filename='assets/js/tutti.min.js') }}")
		script.
			pillar.utils.initCurrentUser({{current_user | json | safe}});
		script(src="{{ url_for('static_dillo', filename='js/generated/tutti.min.js') }}")
		script(src="{{ url_for('static_dillo', filename='js/vendor/moment-2.18.1-with-locales.min.js') }}")

		script.
			moment.locale("{{ g.get('locale', 'en_US') }}");
		script(src="https://twemoji.maxcdn.com/2/twemoji.min.js?2.2.3")
		script(src='https://cdn.jsdelivr.net/instantsearch.js/1/instantsearch.min.js')

		script.
			$(document).ready(function() {
				{% if current_user.is_authenticated %}
					// Check for new notifications in the background
					getNotificationsLoop();

					// Resize #notifications and change overflow for scrollbars
					$(window).on("resize", function() { notificationsResize(); });
				{% endif %}
			});

		| {% block footer_scripts %}{% endblock footer_scripts %}
		script(src="{{ url_for('static_pillar', filename='assets/js/vendor/jquery.select2.min.js') }}")

		| {% if current_user.is_authenticated %}
		script(src="{{ url_for('static_pillar', filename='assets/js/vendor/jquery.typewatch-3.0.0.min.js') }}")
		script(src="{{ url_for('static_pillar', filename='assets/js/vendor/clipboard.min.js')}}")
		script.
			// When sending an AJAX request, always add the X-CSRFToken header to it.
			var csrf_token = "{{ csrf_token() }}";
			$.ajaxSetup({
				beforeSend: function (xhr, settings) {
					if (!/^(GET|HEAD|OPTIONS|TRACE)$/i.test(settings.type) && !this.crossDomain) {
						xhr.setRequestHeader("X-CSRFToken", csrf_token);
					}
				}
			});
		| {% endif %}

		script.
			(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
			m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
			ga('create', '{{ config.GOOGLE_ANALYTICS_TRACKING_ID }} ', 'auto', {'allowAnchor': true});
			ga('send', 'pageview');
