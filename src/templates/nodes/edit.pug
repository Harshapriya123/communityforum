| {% extends 'dillo/layout.html' %}
| {% block bodyattrs %}{{ super() }} data-context='post-edit'{% endblock %}
| {% block page_title %}Edit{% endblock %}

| {% block body %}

#col_main
	.item-edit-form

		ul.item-edit-tabs
			li(
				class="{% if node.properties.post_type == 'link' %}active{% endif %}",
				data-post-type='link')
				span LINK
				small I want to share a link
			li(
				class="{% if node.properties.post_type == 'text' %}active{% endif %}",
				data-post-type='text')
				span TEXT
				small I'll write a nice article

		.item-edit-tab(
			id="item-edit-tab",
			class="{{ node.properties.post_type }}")
			form(
				id="item-edit-form",
				method="POST",
				enctype="multipart/form-data",
				action="{{url_for('nodes.edit', node_id=node._id)}}")

				.input-content.link
					input(
						disabled,
						name="content",
						type="text",
						class="input-field",
						placeholder="Paste or type the URL here",
						value="{{ node.properties.content }}")

				input.item-title(
					id="name",
					value="{{ node.name }}",
					type="text",
					name="name",
					placeholder="Awesome Post Title")

				select(
					id="category",
					name="category")
					| {% for option in config['POST_CATEGORIES'] %}
					option {{ option }}
					| {% endfor %}

				.input-content.text
					textarea(
						disabled,
						name="content",
						class="input-field",
						placeholder="Witty post description")
						| {{ node.properties.content }}

					span.content-extra
						a(href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet")
							| Markdown Cheatsheet

				| {{ form.csrf_token }}
				| {{ form.status }}
				select(
					id="post_type",
					class="post_type",
					name="post_type")
					option(
						value="link",
						selected="{% if node.properties.post_type == 'link' %}selected{% endif %}") Link
					option(
						value="text",
						selected="{% if node.properties.post_type == 'text' %}selected{% endif %}") Text

				.form-upload-file
					| {{ form.picture }}


		.item-edit-header
			.item-edit-header-action
				a.btn.cancel(href="{{ url_for('nodes.view', node_id=node._id)}}") Cancel
				a#item-save.btn.publish(
					href="javascript:void(0);",
					title="Save changes")
					i.pi-check
					| Save Changes

#col_right.listing-view.item-edit-view
	| {% include 'nodes/custom/dillo_post/view_embed.html' %}


| {% endblock body %}

| {% block footer_scripts %}
script(src="{{ url_for('static_pillar', filename='assets/js/vendor/jquery.ui.widget.min.js') }}")
script(src="{{ url_for('static_pillar', filename='assets/js/vendor/jquery.iframe-transport.min.js') }}")
script(src="{{ url_for('static_pillar', filename='assets/js/vendor/jquery.fileupload.min.js') }}")
script(src="{{ url_for('static_pillar', filename='assets/js/vendor/jquery.select2.min.js') }}")
script(src="{{ url_for('static_pillar', filename='assets/js/file_upload.min.js') }}")

script.
	ProjectUtils.setProjectAttributes({projectId: "{{project._id}}", isProject: true, nodeId: '{{ node._id }}'});

	$(function() {

		// On load, enable the proper content
		var input_content = $('.input-content.' + '{{ node.properties.post_type }}' + ' .input-field');
		input_content
			.prop('disabled', false)
			.attr('id', 'content');

		// Markdown initialization
		var convert = new Markdown.getSanitizingConverter();
		Markdown.Extra.init(convert);
		convert = convert.makeHtml;

		// Convert Markdown and emojis for text and title
		var item_title_input = $('#item-edit-form #name');
		var item_description_input = document.getElementById('content');

		item_title_input.keyup(function() {
			$('#item-title').html(
				twemoji.parse(
					item_title_input.val()
				)
			);
		}).trigger('keyup');

		$(item_description_input).keyup(function() {
			$('#item-description').html(
				twemoji.parse(
					convert(
						$(item_description_input).val()
					)
				)
			);
		}).trigger('keyup');

		$('input, textarea').keypress(function () {
			// Set the beforeunload to warn the user of unsaved changes
			$(window).on('beforeunload', function () {
				return 'You have unsaved changes in your post.';
			});
		});

		/* Resize textareas */
		$(item_description_input)
			.autoResize()
			.blur();

		input_content.focus();

		/* Save Workflow */
		$("#item-save").unbind( "click" );

		function uiUpdateOnSave(){
			var $item_save = $("#item-save");

			$item_save
				.removeClass('saving')
				.html('<i class="pi-check"></i> Save Changes');

			if (console){ console.log('saved') };
		}

		/* Submit changes */
		$("#item-edit-form").unbind("submit").submit(function(e) {
			e.preventDefault();

			/* Let us know started saving */
			$("#item-save")
				.addClass('saving')
				.html('<i class="pi-spin spin"></i> Saving...');

			$.ajax({
				url: "{{url_for('nodes.edit', node_id=node._id)}}",
				data: $(this).serialize(),
				type: 'POST'
			})
			.fail(function(xhr){
				/* Something went wrong, notify */
				toastr.error(xhr.statusText, 'Error ' + xhr.status);
				uiUpdateOnSave();
			})
			.done(function(dataHtml){
				// Disable beforeunolad when submitting a form
				$(window).off('beforeunload');

				$('#col_right').html(dataHtml);
				loadComments("{{ url_for('nodes.comments_for_node', node_id=node._id) }}");

				toastr.success('Saved!');
				uiUpdateOnSave();
			});
		});

		$('#item-save').click(function(e){
			e.preventDefault();
			$("#item-edit-form").submit();
		});

	});
| {% endblock footer_scripts %}
