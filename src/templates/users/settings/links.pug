| {% extends 'users/settings/page.html' %}

| {% block settings_page_title %}{{ _("Links") }}{% endblock %}
| {% block settings_page_content %}
| {# If we have links in the links fields list, we will display some UI elements, otherwise not #}
| {% if (form.links | length == 0) %}{% set link_list_dependent_visibility = 'hidden' %}{% endif %}

p {{ _("Display custom links (your website, social media links, etc, on your profile.") }}
.settings-form
	.fieldset-row-sample(data-toggle='fieldset-entry-sample', style='display: none')
		.fieldset-field
			input#links-00-name(name='links-00-name', placeholder='Title', type='text', value='')
		.fieldset-field
			input#links-00-url(name='links-00-url', placeholder='URL', type='url', value='')
		.fieldset-field-action
			button#link-00-remove.btn.btn-danger(type='button', data-toggle='fieldset-remove-row')
				i.pi-trash

	form#settings-form(method='POST', action="{{url_for('settings.links')}}")
		| {{ form.csrf_token }}
		.fieldset-container(data-toggle="fieldset" data-max_entries="{{ form.links.max_entries }}", id="link-fieldset")
			button.btn.btn-success(
				type="button",
				data-toggle="fieldset-add-row",
				data-target="#link-fieldset",
			)
				| #[i.pi-plus] {{ _("Add Link") }}
			span.fieldset-notice {{ _("Maximum") }} #[span.max 5] {{ _("links") }}

			.fieldset-row.fieldset-labels(class='{{link_list_dependent_visibility}}')
				.fieldset-field
					label {{ _("Title") }}
				.fieldset-field
					label {{ _("URL") }}
				.fieldset-field-action(style="width: 40px")

			| {% for link in form.links %}
			.fieldset-row(data-toggle="fieldset-entry")
				.fieldset-field
					| {{ link.form.name(placeholder="Title") }}

					| {% if 'name' in link.form.errors %}
					| {% for error in link.form.errors['name'] %}
					.fieldset-row-error {{ error }}
					| {% endfor %}
					| {% endif %}

				.fieldset-field
					| {{ link.form.url(placeholder="URL") }}

					| {% if 'url' in link.form.errors %}
					| {% for error in link.form.errors['url'] %}
					.fieldset-row-error {{ error }}
					| {% endfor %}
					| {% endif %}

				.fieldset-field-action
					button.btn.btn-danger(
						type="button",
						data-toggle="fieldset-remove-row",
						id="link-{{loop.index0}}-remove",
					)
						i.pi-trash

			| {% endfor %}

			hr

			.buttons(class='{{link_list_dependent_visibility}}')
				button.btn.btn-info(type='submit')
					i.pi-check
					| {{ _("Save Changes") }}

| {% endblock %}

| {% block footer_scripts %}
script.
	{% with messages = get_flashed_messages(with_categories = true) %}
		{% if messages %}
			{% for category, message in messages %}
				toastr.success('{{ message }}');
			{% endfor %}
		{% endif %}
	{%endwith %}


	$(function () {
		$("div[data-toggle=fieldset]").each(function () {
			var $this = $(this);
			var $btn_add_row = $this.find("button[data-toggle=fieldset-add-row]");
			// Define remove_row to attach removal event
			var $btn_remove_row = $this.find("button[data-toggle=fieldset-remove-row]");
			var $div_target = $($btn_add_row.data("target"));
			// Get the initial count of rows, which is then increased or decreased on add or remove
			var rows_count = $div_target.find("div[data-toggle=fieldset-entry]").length;
			var max_entries = $this.data("max_entries");
			// TODO make generic attribute to be referenced by multiple forms
			var $fieldset_entry_sample = $("div[data-toggle=fieldset-entry-sample]:first");
			// Define remove_row_sample to attach removal event
			var $btn_remove_row_sample = $fieldset_entry_sample.find("button[data-toggle=fieldset-remove-row]");
			$div_target.find('span.fieldset-notice span.max').text(max_entries);

			// Count rows update add and delete buttons
			if (rows_count >= max_entries) $btn_add_row.addClass('disabled').next('span.fieldset-notice').show();

			// Add new entry
			$btn_add_row.click(function () {
				var oldrow = $div_target.find("div[data-toggle=fieldset-entry]:last");
				if (oldrow.length > 0) {
					var row = oldrow.clone(true, true);
				} else {
					var row = $fieldset_entry_sample.clone(true, true);
				}
				var elem_id = row.find(":input")[0].id;
				// Define elem_id_string, which could be 00
				var elem_id_string = elem_id.replace(/.*-(\d{1,4})-.*/m, '$1');
				var elem_num = parseInt(elem_id_string, 10);
				var elem_num_next = elem_num + 1;
				row.attr('data-id', elem_num_next);
				row.find(':input').each(function () {
					var id = $(this).attr('id').replace('-' + (elem_id_string) + '-', '-' + (elem_num_next) + '-');
					$(this).attr('name', id).attr('id', id).val('').removeAttr('checked');
				});

				if (oldrow.length > 0) {
					oldrow.after(row);
				} else {
					row.toggleClass('fieldset-row-sample fieldset-row');
					row.attr('data-toggle', 'fieldset-entry');
					$('.fieldset-row').after(row.show());
				}

				rows_count ++;

				// Clean error fields in new rows
				row.find('.fieldset-row-error').remove();

				// Focus on the name field
				row.find(":input[name$='name']").focus();

				// Count rows update add and delete buttons
				if (rows_count >= max_entries) $btn_add_row.addClass('disabled').next('span.fieldset-notice').show();
				if (rows_count > 0) {
					$('.fieldset-labels').removeClass('hidden');
					$('.buttons').removeClass('hidden');
				}
			});

			//Remove row
			$btn_remove_row.add($btn_remove_row_sample).click(function () {
				var thisRow = $(this).closest("div[data-toggle=fieldset-entry]");
				thisRow.remove();
				rows_count--;
				// Count rows update add and delete buttons
				if (rows_count < max_entries) $btn_add_row.removeClass('disabled').next('span.fieldset-notice').hide();;
				// if (rows_count === 1) $this.find("button[data-toggle=fieldset-remove-row]").hide();
			});
		});
	});
| {% endblock footer_scripts %}
